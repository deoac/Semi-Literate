#! /usr/bin/env raku

# Tangle a Semi-literate file into a working Raku file.
# Â© 2023 Shimon Bollinger. All rights reserved.
# Last modified: Sat 02 Sep 2023 02:06:16 PM EDT
# Version 0.0.1

# always use the latest version of Raku
use v6.*;

use Semi::Literate;

#| The actual program starts here.
multi MAIN (
    Str $input-file;
    Str :o(:$output-file) = '';
) {
    my Str $raku-source = tangle $input-file;

    my $output-file-handle = $output-file              ??
                                open(:w, $output-file) !!
                                $*OUT;

    $output-file-handle.spurt: $raku-source;
} # end of multi MAIN ( )
#| Run with the option '--test' to test the program
multi MAIN (:$test!) {
    use Test;

    my @tests = [
        %{ got => '', op => 'eq', expected => '', desc => 'Example 1' },
    ];

    for @tests {
#        cmp-ok .<got>, .<op>, .<expected>, .<desc>;
    } # end of for @tests
} # end of multi MAIN (:$test!)

my %*SUB-MAIN-OPTS =
  :named-anywhere,             # allow named variables at any location
  :bundling,                   # allow bundling of named arguments
#  :coerce-allomorphs-to(Str),  # coerce allomorphic arguments to given type
  :allow-no,                   # allow --no-foo as alternative to --/foo
  :numeric-suffix-as-value,    # allow -j2 as alternative to --j=2
;

#| Run with '--pod' to see all of the POD6 objects
multi MAIN(Bool :$pod!) {
    for $=pod -> $pod-item {
        for $pod-item.contents -> $pod-block {
            $pod-block.raku.say;
        }
    }
} # end of multi MAIN (:$pod)

#| Run with '--doc' to generate a document from the POD6
#| It will be rendered in Text format
#| unless specified with the --format option.  e.g.
#|       --format=HTML
multi MAIN(Bool :$doc!, Str :$format = 'Text') {
    run $*EXECUTABLE, "--doc=$format", $*PROGRAM;
} # end of multi MAIN(Bool :$man!)